diff --git a/lalsimulation/src/LALSimIMR.h b/lalsimulation/src/LALSimIMR.h
index d4129de..59c14a6 100644
--- a/lalsimulation/src/LALSimIMR.h
+++ b/lalsimulation/src/LALSimIMR.h
@@ -106,13 +106,13 @@ SphHarmTimeSeries *XLALSimIMREOBNRv2Modes(const REAL8 phiRef, const REAL8 deltaT
 
 double XLALSimIMRSpinAlignedEOBPeakFrequency(REAL8 m1SI, REAL8 m2SI, const REAL8 spin1z, const REAL8 spin2z, UINT4 SpinAlignedEOBversion);
 int XLALSimIMRSpinAlignedEOBWaveform(REAL8TimeSeries **hplus, REAL8TimeSeries **hcross, const REAL8 phiC, REAL8 deltaT, const REAL8 m1SI, const REAL8 m2SI, const REAL8 fMin, const REAL8 r, const REAL8 inc, const REAL8 spin1z, const REAL8 spin2z, UINT4 SpinAlignedEOBversion, LALDict *LALparams);
-int XLALSimIMRSpinAlignedEOBWaveformAll(REAL8TimeSeries **hplus, REAL8TimeSeries **hcross, const REAL8 phiC, REAL8 deltaT, const REAL8 m1SI, const REAL8 m2SI, const REAL8 fMin, const REAL8 r, const REAL8 inc, const REAL8 spin1z, const REAL8 spin2z, UINT4 SpinAlignedEOBversion, const REAL8 lambda2Tidal1, const REAL8 lambda2Tidal2, const REAL8 omega02Tidal1, const REAL8 omega02Tidal2, const REAL8 lambda3Tidal1, const REAL8 lambda3Tidal2, const REAL8 omega03Tidal1, const REAL8 omega03Tidal2, const REAL8 quadparam1, const REAL8 quadparam2, REAL8Vector *nqcCoeffsInput, const INT4 nqcFlag, LALValue *ModeArray);
+int XLALSimIMRSpinAlignedEOBWaveformAll(REAL8TimeSeries **hplus, REAL8TimeSeries **hcross, const REAL8 phiC, REAL8 deltaT, const REAL8 m1SI, const REAL8 m2SI, const REAL8 fMin, const REAL8 r, const REAL8 inc, const REAL8 spin1z, const REAL8 spin2z, UINT4 SpinAlignedEOBversion, const REAL8 lambda2Tidal1, const REAL8 lambda2Tidal2, const REAL8 omega02Tidal1, const REAL8 omega02Tidal2, const REAL8 lambda3Tidal1, const REAL8 lambda3Tidal2, const REAL8 omega03Tidal1, const REAL8 omega03Tidal2, const REAL8 quadparam1, const REAL8 quadparam2, const REAL8 omega220, const REAL8 tau220, const REAL8 omega210, const REAL8 tau210, const REAL8 omega330, const REAL8 tau330, const REAL8 omega440, const REAL8 tau440, const REAL8 omega550, const REAL8 tau550, REAL8Vector *nqcCoeffsInput, const INT4 nqcFlag, LALValue *ModeArray);
 int XLALSimIMRSpinAlignedEOBModes(SphHarmTimeSeries ** hlmmode,
   //SM
   REAL8Vector ** dynamics_out, /**<< OUTPUT, low-sampling dynamics */
   REAL8Vector ** dynamicsHi_out, /**<< OUTPUT, high-sampling dynamics */
   //SM
- REAL8 deltaT, const REAL8 m1SI, const REAL8 m2SI, const REAL8 fMin, const REAL8 r, const REAL8 spin1z, const REAL8 spin2z, UINT4 SpinAlignedEOBversion, const REAL8 lambda2Tidal1, const REAL8 lambda2Tidal2, const REAL8 omega02Tidal1, const REAL8 omega02Tidal2, const REAL8 lambda3Tidal1, const REAL8 lambda3Tidal2, const REAL8 omega03Tidal1, const REAL8 omega03Tidal2, const REAL8 quadparam1, const REAL8 quadparam2, REAL8Vector *nqcCoeffsInput, const INT4 nqcFlag);
+ REAL8 deltaT, const REAL8 m1SI, const REAL8 m2SI, const REAL8 fMin, const REAL8 r, const REAL8 spin1z, const REAL8 spin2z, UINT4 SpinAlignedEOBversion, const REAL8 lambda2Tidal1, const REAL8 lambda2Tidal2, const REAL8 omega02Tidal1, const REAL8 omega02Tidal2, const REAL8 lambda3Tidal1, const REAL8 lambda3Tidal2, const REAL8 omega03Tidal1, const REAL8 omega03Tidal2, const REAL8 quadparam1, const REAL8 quadparam2, const REAL8 omega220, const REAL8 tau220, const REAL8 omega210, const REAL8 tau210, const REAL8 omega330, const REAL8 tau330, const REAL8 omega440, const REAL8 tau440, const REAL8 omega550, const REAL8 tau550, REAL8Vector *nqcCoeffsInput, const INT4 nqcFlag);
 /*int XLALSimIMRSpinEOBWaveform(REAL8TimeSeries **hplus, REAL8TimeSeries **hcross, const REAL8 phiC, const REAL8 deltaT, const REAL8 m1SI, const REAL8 m2SI, const REAL8 fMin, const REAL8 r, const REAL8 inc, const REAL8 spin1[], const REAL8 spin2[]);
  */
 
diff --git a/lalsimulation/src/LALSimIMREOBHybridRingdown.c b/lalsimulation/src/LALSimIMREOBHybridRingdown.c
index 1b514f6..06a8471 100644
--- a/lalsimulation/src/LALSimIMREOBHybridRingdown.c
+++ b/lalsimulation/src/LALSimIMREOBHybridRingdown.c
@@ -1025,6 +1025,16 @@ static UNUSED INT4 XLALSimIMREOBAttachFitRingdown(
     const REAL8 spin2x,    /**<<The spin of the second object; */
     const REAL8 spin2y,    /**<<The spin of the second object; */
     const REAL8 spin2z,    /**<<The spin of the second object; */
+    const REAL8 omega220,  /**<<The frequency of the 220 mode (Hz); */
+    const REAL8 tau220,	   /**<<The damping time of the  220 mode (sec); */
+    const REAL8 omega210,  /**<<The frequency of the 210 mode (Hz); */
+    const REAL8 tau210,    /**<<The damping time of the  210 mode (sec); */
+    const REAL8 omega330,  /**<<The frequency of the 330 mode (Hz); */
+    const REAL8 tau330,    /**<<The damping time of the  330 mode (sec); */
+    const REAL8 omega440,  /**<<The frequency of the 440 mode (Hz); */
+    const REAL8 tau440,    /**<<The damping time of the  440 mode (sec); */
+    const REAL8 omega550,  /**<<The frequency of the 550 mode (Hz); */
+    const REAL8 tau550,    /**<<The damping time of the  550 mode (sec); */
     REAL8Vector * timeVec, /**<< Vector containing the time values */
     REAL8Vector * matchrange,
                            /**<< Time values chosen as points for performing comb matching */
@@ -1087,6 +1097,23 @@ static UNUSED INT4 XLALSimIMREOBAttachFitRingdown(
         XLALDestroyCOMPLEX16Vector(modefreqs);
         XLAL_ERROR(XLAL_EFUNC);
     }
+    printf("the 0-overtone for %d,%d mode: %.16f + i %.16f \n", l,m,creal(modefreqs->data[0]), cimag(modefreqs->data[0]));
+
+    if (( l == 2 ) && (m == 2)){
+	modefreqs->data[0] = omega220 + I*(1./tau220);
+    }
+    if (( l == 2 ) && ( m == 1)) {
+	modefreqs->data[0] = omega210 + I*(1./tau210);
+    }
+    if (( l == 3 ) && ( m == 3)) {
+	modefreqs->data[0] = omega330 + I*(1./tau330);
+    }
+    if (( l == 4 ) && ( m == 4)) {
+	modefreqs->data[0] = omega440 + I*(1./tau440);
+    }
+    if (( l == 5 ) && ( m == 5)) {
+	modefreqs->data[0] = omega550 + I*(1./tau550);
+    }
 
     //RC: we use this variable to compute the damping time of the 22 mode which will be used to set the lenght of the ringdown for all the modes
     modefreqs22 = XLALCreateCOMPLEX16Vector(1);
diff --git a/lalsimulation/src/LALSimIMRSpinAlignedEOB.c b/lalsimulation/src/LALSimIMRSpinAlignedEOB.c
index 6c1a54e..a4cf660 100644
--- a/lalsimulation/src/LALSimIMRSpinAlignedEOB.c
+++ b/lalsimulation/src/LALSimIMRSpinAlignedEOB.c
@@ -544,6 +544,27 @@ XLALSimIMRSpinAlignedEOBWaveform (REAL8TimeSeries ** hplus,	     /**<< OUTPUT, +
   REAL8 omega03Tidal2 = 0;
   REAL8 quadparam1 = 0;
   REAL8 quadparam2 = 0;
+  REAL8 omega220 = 0;
+  REAL8 tau220 = 0;
+  REAL8 omega210 = 0;
+  REAL8 tau210 = 0;
+  REAL8 omega330 = 0;
+  REAL8 tau330 = 0;
+  REAL8 omega440 = 0;
+  REAL8 tau440 = 0;
+  REAL8 omega550 = 0;
+  REAL8 tau550 = 0;
+  
+  omega220 = XLALSimInspiralWaveformParamsLookupOmega220(LALParams);
+  tau220 = XLALSimInspiralWaveformParamsLookupTau220(LALParams);
+  omega210 = XLALSimInspiralWaveformParamsLookupOmega210(LALParams);
+  tau210 = XLALSimInspiralWaveformParamsLookupTau210(LALParams);
+  omega330 = XLALSimInspiralWaveformParamsLookupOmega330(LALParams);
+  tau330 = XLALSimInspiralWaveformParamsLookupTau330(LALParams);
+  omega440 = XLALSimInspiralWaveformParamsLookupOmega440(LALParams);
+  tau440 = XLALSimInspiralWaveformParamsLookupTau440(LALParams);
+  omega550 = XLALSimInspiralWaveformParamsLookupOmega550(LALParams);
+  tau550 = XLALSimInspiralWaveformParamsLookupTau550(LALParams);
 
   lambda2Tidal1 = XLALSimInspiralWaveformParamsLookupTidalLambda1(LALParams);
   lambda2Tidal2 = XLALSimInspiralWaveformParamsLookupTidalLambda2(LALParams);
@@ -607,7 +628,7 @@ XLALSimIMRSpinAlignedEOBWaveform (REAL8TimeSeries ** hplus,	     /**<< OUTPUT, +
       printf("First run SEOBNRv4 to compute NQCs\n");
 #endif
       ret = XLALSimIMRSpinAlignedEOBWaveformAll (hplus, hcross, phiC, 1./32768, m1BH, m2BH, 2*pow(10.,-1.5)/(2.*LAL_PI)/((m1BH + m2BH)*LAL_MTSUN_SI/LAL_MSUN_SI), r, inc, spin1z, spin2z, 400,
-					 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, nqcCoeffsInput, nqcFlag, ModeArray);
+					 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, omega220, tau220, omega210, tau210, omega330, tau330, omega440, tau440, omega550, tau550, nqcCoeffsInput, nqcFlag, ModeArray);
       if (ret == XLAL_FAILURE){
         if ( nqcCoeffsInput ) XLALDestroyREAL8Vector( nqcCoeffsInput );
         if(ModeArray) XLALDestroyValue(ModeArray);
@@ -627,7 +648,7 @@ XLALSimIMRSpinAlignedEOBWaveform (REAL8TimeSeries ** hplus,	     /**<< OUTPUT, +
                                                  omega02Tidal1, omega02Tidal2,
                                                  lambda3Tidal1, lambda3Tidal2,
                                                  omega03Tidal1, omega03Tidal2,
-                                                 quadparam1, quadparam2,
+                                                 quadparam1, quadparam2, omega220, tau220, omega210, tau210, omega330, tau330, omega440, tau440, omega550, tau550,
                                                  nqcCoeffsInput, nqcFlag, ModeArray);
      if (ret == XLAL_FAILURE){
        if ( nqcCoeffsInput ) XLALDestroyREAL8Vector( nqcCoeffsInput );
@@ -710,6 +731,16 @@ XLALSimIMRSpinAlignedEOBModes (SphHarmTimeSeries ** hlmmode,
                      /**<< parameter kappa_1 of the spin-induced quadrupole for body 1, quadrupole is Q_A = -kappa_A m_A^3 chi_A^2 */
 				     const REAL8 quadparam2,
                      /**<< parameter kappa_2 of the spin-induced quadrupole for body 2, quadrupole is Q_A = -kappa_A m_A^3 chi_A^2 */
+				     const REAL8 omega220,
+				     const REAL8 tau220,
+				     const REAL8 omega210,
+                                     const REAL8 tau210,
+				     const REAL8 omega330,
+                                     const REAL8 tau330,
+				     const REAL8 omega440,
+                                     const REAL8 tau440,
+				     const REAL8 omega550,
+                                     const REAL8 tau550,
                      REAL8Vector *nqcCoeffsInput,
                      /**<< Input NQC coeffs */
                      const INT4 nqcFlag
@@ -2469,7 +2500,6 @@ for ( UINT4 k = 0; k<nModes; k++) {
     printf("tattach = %.16f\n", rdMatchPoint->data[1]);
 #endif
 UINT4 indAmpMax = 0; //RC this variable is only used for SEOBNRv4HM. It stores the index of the attaching point of the 22 mode
-
 for ( UINT4 k = 0; k<nModes; k++) {
 
     modeL  = lmModes[k][0];
@@ -2565,7 +2595,7 @@ for ( UINT4 k = 0; k<nModes; k++) {
             if (XLALSimIMREOBAttachFitRingdown (sigReHi, sigImHi, modeL, modeM,
 					  deltaTHigh, m1, m2, spin1[0],
 					  spin1[1], spin1[2], spin2[0],
-					  spin2[1], spin2[2], &timeHi,
+					  spin2[1], spin2[2], omega220, tau220, omega210, tau210, omega330, tau330, omega440, tau440, omega550, tau550,&timeHi,
 					  rdMatchPoint,
 					  SpinAlignedEOBapproximant, &indAmpMax) ==
                 XLAL_FAILURE)
@@ -3236,6 +3266,16 @@ XLALSimIMRSpinAlignedEOBWaveformAll (REAL8TimeSeries ** hplus,
                      /**<< parameter kappa_1 of the spin-induced quadrupole for body 1, quadrupole is Q_A = -kappa_A m_A^3 chi_A^2 */
 				     const REAL8 quadparam2,
                      /**<< parameter kappa_2 of the spin-induced quadrupole for body 2, quadrupole is Q_A = -kappa_A m_A^3 chi_A^2 */
+				     const REAL8 omega220,
+                                     const REAL8 tau220,
+                                     const REAL8 omega210,
+                                     const REAL8 tau210,
+                                     const REAL8 omega330,
+                                     const REAL8 tau330,
+                                     const REAL8 omega440,
+                                     const REAL8 tau440,
+                                     const REAL8 omega550,
+                                     const REAL8 tau550,
                      REAL8Vector *nqcCoeffsInput,
                      /**<< Input NQC coeffs */
                      const INT4 nqcFlag,
@@ -3264,7 +3304,7 @@ XLALSimIMRSpinAlignedEOBWaveformAll (REAL8TimeSeries ** hplus,
                                                omega02Tidal1, omega02Tidal2,
                                                lambda3Tidal1, lambda3Tidal2,
                                                omega03Tidal1, omega03Tidal2,
-                                               quadparam1, quadparam2,
+                                               quadparam1, quadparam2, omega220, tau220, omega210, tau210, omega330, tau330, omega440, tau440, omega550, tau550,
                                                nqcCoeffsInput, nqcFlag) == XLAL_FAILURE){
                                                  if(dynamics) XLALDestroyREAL8Vector(dynamics);
                                                  if(dynamicsHi) XLALDestroyREAL8Vector(dynamicsHi);
diff --git a/lalsimulation/src/LALSimInspiral.c b/lalsimulation/src/LALSimInspiral.c
index 3c6e34d..4de0a9e 100644
--- a/lalsimulation/src/LALSimInspiral.c
+++ b/lalsimulation/src/LALSimInspiral.c
@@ -344,6 +344,16 @@ int XLALSimInspiralChooseTDWaveform(
     REAL8 quadparam2 = 1.+XLALSimInspiralWaveformParamsLookupdQuadMon2(LALparams);
     REAL8 lambda1 = XLALSimInspiralWaveformParamsLookupTidalLambda1(LALparams);
     REAL8 lambda2 = XLALSimInspiralWaveformParamsLookupTidalLambda2(LALparams);
+    UNUSED REAL8 omega220 = XLALSimInspiralWaveformParamsLookupOmega220(LALparams);
+    UNUSED REAL8 tau220 = XLALSimInspiralWaveformParamsLookupTau220(LALparams);
+    UNUSED REAL8 omega210 = XLALSimInspiralWaveformParamsLookupOmega210(LALparams);
+    UNUSED REAL8 tau210 = XLALSimInspiralWaveformParamsLookupTau210(LALparams);
+    UNUSED REAL8 omega330 = XLALSimInspiralWaveformParamsLookupOmega330(LALparams);
+    UNUSED REAL8 tau330 = XLALSimInspiralWaveformParamsLookupTau330(LALparams);
+    UNUSED REAL8 omega440 = XLALSimInspiralWaveformParamsLookupOmega440(LALparams);
+    UNUSED REAL8 tau440 = XLALSimInspiralWaveformParamsLookupTau440(LALparams);
+    UNUSED REAL8 omega550 = XLALSimInspiralWaveformParamsLookupOmega550(LALparams);
+    UNUSED REAL8 tau550 = XLALSimInspiralWaveformParamsLookupTau550(LALparams);
     int amplitudeO = XLALSimInspiralWaveformParamsLookupPNAmplitudeOrder(LALparams);
     int phaseO =XLALSimInspiralWaveformParamsLookupPNPhaseOrder(LALparams);
 		/* Tidal parameters to be computed, if required, by universal relations */
diff --git a/lalsimulation/src/LALSimInspiralWaveformParams.c b/lalsimulation/src/LALSimInspiralWaveformParams.c
index e707ffa..f13d8c8 100644
--- a/lalsimulation/src/LALSimInspiralWaveformParams.c
+++ b/lalsimulation/src/LALSimInspiralWaveformParams.c
@@ -67,6 +67,16 @@ DEFINE_INSERT_FUNC(PNEccentricityOrder, INT4, "eccO", -1)
 DEFINE_INSERT_FUNC(PNSpinOrder, INT4, "spinO", -1)
 DEFINE_INSERT_FUNC(PNTidalOrder, INT4, "tideO", -1)
 
+DEFINE_INSERT_FUNC(Omega220, REAL8, "omega220", 0)
+DEFINE_INSERT_FUNC(Tau220, REAL8, "tau220", 0)
+DEFINE_INSERT_FUNC(Omega210, REAL8, "omega210", 0)
+DEFINE_INSERT_FUNC(Tau210, REAL8, "tau210", 0)
+DEFINE_INSERT_FUNC(Omega330, REAL8, "omega330", 0)
+DEFINE_INSERT_FUNC(Tau330, REAL8, "tau330", 0)
+DEFINE_INSERT_FUNC(Omega440, REAL8, "omega440", 0)
+DEFINE_INSERT_FUNC(Tau440, REAL8, "tau440", 0)
+DEFINE_INSERT_FUNC(Omega550, REAL8, "omega550", 0)
+DEFINE_INSERT_FUNC(Tau550, REAL8, "tau550", 0)
 
 DEFINE_INSERT_FUNC(TidalLambda1, REAL8, "lambda1", 0)
 DEFINE_INSERT_FUNC(TidalLambda2, REAL8, "lambda2", 0)
@@ -167,6 +177,17 @@ DEFINE_LOOKUP_FUNC(PNEccentricityOrder, INT4, "eccO", -1)
 DEFINE_LOOKUP_FUNC(PNSpinOrder, INT4, "spinO", -1)
 DEFINE_LOOKUP_FUNC(PNTidalOrder, INT4, "tideO", -1)
 
+DEFINE_LOOKUP_FUNC(Omega220, REAL8, "omega220", 0)
+DEFINE_LOOKUP_FUNC(Tau220, REAL8, "tau220", 0)
+DEFINE_LOOKUP_FUNC(Omega210, REAL8, "omega210", 0)
+DEFINE_LOOKUP_FUNC(Tau210, REAL8, "tau210", 0)
+DEFINE_LOOKUP_FUNC(Omega330, REAL8, "omega330", 0)
+DEFINE_LOOKUP_FUNC(Tau330, REAL8, "tau330", 0)
+DEFINE_LOOKUP_FUNC(Omega440, REAL8, "omega440", 0)
+DEFINE_LOOKUP_FUNC(Tau440, REAL8, "tau440", 0)
+DEFINE_LOOKUP_FUNC(Omega550, REAL8, "omega550", 0)
+DEFINE_LOOKUP_FUNC(Tau550, REAL8, "tau550", 0)
+
 DEFINE_LOOKUP_FUNC(TidalLambda1, REAL8, "lambda1", 0)
 DEFINE_LOOKUP_FUNC(TidalLambda2, REAL8, "lambda2", 0)
 DEFINE_LOOKUP_FUNC(TidalOctupolarLambda1, REAL8, "TidalOctupolarLambda1", 0)
@@ -259,6 +280,17 @@ DEFINE_ISDEFAULT_FUNC(PNEccentricityOrder, INT4, "eccO", -1)
 DEFINE_ISDEFAULT_FUNC(PNSpinOrder, INT4, "spinO", -1)
 DEFINE_ISDEFAULT_FUNC(PNTidalOrder, INT4, "tideO", -1)
 
+DEFINE_ISDEFAULT_FUNC(Omega220, REAL8, "omega220", 0)
+DEFINE_ISDEFAULT_FUNC(Tau220, REAL8, "tau220", 0)
+DEFINE_ISDEFAULT_FUNC(Omega210, REAL8, "omega210", 0)
+DEFINE_ISDEFAULT_FUNC(Tau210, REAL8, "tau210", 0)
+DEFINE_ISDEFAULT_FUNC(Omega330, REAL8, "omega330", 0)
+DEFINE_ISDEFAULT_FUNC(Tau330, REAL8, "tau330", 0)
+DEFINE_ISDEFAULT_FUNC(Omega440, REAL8, "omega440", 0)
+DEFINE_ISDEFAULT_FUNC(Tau440, REAL8, "tau440", 0)
+DEFINE_ISDEFAULT_FUNC(Omega550, REAL8, "omega550", 0)
+DEFINE_ISDEFAULT_FUNC(Tau550, REAL8, "tau550", 0)
+
 DEFINE_ISDEFAULT_FUNC(TidalLambda1, REAL8, "lambda1", 0)
 DEFINE_ISDEFAULT_FUNC(TidalLambda2, REAL8, "lambda2", 0)
 DEFINE_ISDEFAULT_FUNC(TidalOctupolarLambda1, REAL8, "TidalOctupolarLambda1", 0)
diff --git a/lalsimulation/src/LALSimInspiralWaveformParams.h b/lalsimulation/src/LALSimInspiralWaveformParams.h
index c8ebdaf..376c064 100644
--- a/lalsimulation/src/LALSimInspiralWaveformParams.h
+++ b/lalsimulation/src/LALSimInspiralWaveformParams.h
@@ -24,6 +24,17 @@ int XLALSimInspiralWaveformParamsInsertPNEccentricityOrder(LALDict *params, INT4
 int XLALSimInspiralWaveformParamsInsertPNSpinOrder(LALDict *params, INT4 value);
 int XLALSimInspiralWaveformParamsInsertPNTidalOrder(LALDict *params, INT4 value);
 
+int XLALSimInspiralWaveformParamsInsertOmega220(LALDict *params, REAL8 value);
+int XLALSimInspiralWaveformParamsInsertTau220(LALDict *params, REAL8 value);
+int XLALSimInspiralWaveformParamsInsertOmega210(LALDict *params, REAL8 value);
+int XLALSimInspiralWaveformParamsInsertTau210(LALDict *params, REAL8 value);
+int XLALSimInspiralWaveformParamsInsertOmega330(LALDict *params, REAL8 value);
+int XLALSimInspiralWaveformParamsInsertTau330(LALDict *params, REAL8 value);
+int XLALSimInspiralWaveformParamsInsertOmega440(LALDict *params, REAL8 value);
+int XLALSimInspiralWaveformParamsInsertTau440(LALDict *params, REAL8 value);
+int XLALSimInspiralWaveformParamsInsertOmega550(LALDict *params, REAL8 value);
+int XLALSimInspiralWaveformParamsInsertTau550(LALDict *params, REAL8 value);
+
 int XLALSimInspiralWaveformParamsInsertTidalLambda1(LALDict *params, REAL8 value);
 int XLALSimInspiralWaveformParamsInsertTidalLambda2(LALDict *params, REAL8 value);
 int XLALSimInspiralWaveformParamsInsertTidalOctupolarLambda1(LALDict *params, REAL8 value);
@@ -109,6 +120,17 @@ INT4 XLALSimInspiralWaveformParamsLookupPNEccentricityOrder(LALDict *params);
 INT4 XLALSimInspiralWaveformParamsLookupPNSpinOrder(LALDict *params);
 INT4 XLALSimInspiralWaveformParamsLookupPNTidalOrder(LALDict *params);
 
+REAL8 XLALSimInspiralWaveformParamsLookupOmega220(LALDict *params);
+REAL8 XLALSimInspiralWaveformParamsLookupTau220(LALDict *params);
+REAL8 XLALSimInspiralWaveformParamsLookupOmega210(LALDict *params);
+REAL8 XLALSimInspiralWaveformParamsLookupTau210(LALDict *params);
+REAL8 XLALSimInspiralWaveformParamsLookupOmega330(LALDict *params);
+REAL8 XLALSimInspiralWaveformParamsLookupTau330(LALDict *params);
+REAL8 XLALSimInspiralWaveformParamsLookupOmega440(LALDict *params);
+REAL8 XLALSimInspiralWaveformParamsLookupTau440(LALDict *params);
+REAL8 XLALSimInspiralWaveformParamsLookupOmega550(LALDict *params);
+REAL8 XLALSimInspiralWaveformParamsLookupTau550(LALDict *params);
+
 REAL8 XLALSimInspiralWaveformParamsLookupTidalLambda1(LALDict *params);
 REAL8 XLALSimInspiralWaveformParamsLookupTidalLambda2(LALDict *params);
 REAL8 XLALSimInspiralWaveformParamsLookupTidalOctupolarLambda1(LALDict *params);
@@ -194,6 +216,17 @@ int XLALSimInspiralWaveformParamsPNEccentricityOrderIsDefault(LALDict *params);
 int XLALSimInspiralWaveformParamsPNSpinOrderIsDefault(LALDict *params);
 int XLALSimInspiralWaveformParamsPNTidalOrderIsDefault(LALDict *params);
 
+int XLALSimInspiralWaveformParamsOmega220IsDefault(LALDict *params);
+int XLALSimInspiralWaveformParamsTau220IsDefault(LALDict *params);
+int XLALSimInspiralWaveformParamsOmega210IsDefault(LALDict *params);
+int XLALSimInspiralWaveformParamsTau210IsDefault(LALDict *params);
+int XLALSimInspiralWaveformParamsOmega330IsDefault(LALDict *params);
+int XLALSimInspiralWaveformParamsTau330IsDefault(LALDict *params);
+int XLALSimInspiralWaveformParamsOmega440IsDefault(LALDict *params);
+int XLALSimInspiralWaveformParamsTau440IsDefault(LALDict *params);
+int XLALSimInspiralWaveformParamsOmega550IsDefault(LALDict *params);
+int XLALSimInspiralWaveformParamsTau550IsDefault(LALDict *params);
+
 int XLALSimInspiralWaveformParamsTidalLambda1IsDefault(LALDict *params);
 int XLALSimInspiralWaveformParamsTidalLambda2IsDefault(LALDict *params);
 int XLALSimInspiralWaveformParamsTidalOctupolarLambda1IsDefault(LALDict *params);
